// Import gradle-git
import org.ajoberstar.gradle.git.tasks.*

// Apply the java plugin to add support for Java
apply plugin: 'java'

// I do not know for what this plugin is used
apply plugin: 'eclipse'

// Apply the Github pages plugin
apply plugin: 'github-pages'

// Apply the Checkstyle plugin
// apply plugin: 'checkstyle'

// Apply the Findbugs plugin to find bugs in pre-commits
// apply plugin: 'findbugs'

version='0.1-ALPHA'

sourceSets {
    main {
        compileClasspath += fileTree(dir: './lib', includes: ['**/*.jar'])
    }
}

task setupClubManager

defaultTasks 'ant.antCompile', 'ant.createJavadoc'

buildscript {    
    repositories {
        // Use 'maven central' for resolving your dependencies.
        mavenCentral()
    }

    dependencies {
        // Use the Git plugin for Gradle
        classpath 'org.ajoberstar:gradle-git:0.6.3'
    }
}

task myJavadocs(type: Javadoc) {
    source = sourceSets.main.allJava
}


// Import ANT tasks
ant.importBuild 'build.xml'

task (setupDitaOt, dependsOn: setupClubManager, type: GitClone) {
    def folder = new File( 'repositories/dita-ot' )
    if(!folder.exists()) {
        println 'DITA-OT is not available. Clone DITA-OT from GitHub...'
        setUri("http://remote.repository/")
        setDestinationPath("repositories/dita-ot")
        cloneRepo()
    } else {
        println 'DITA-OT is available, do nothing'
    }
}

task (cloneUmlGraph, dependsOn: setupClubManager, type: GitClone) {
    def folder = new File('repositories/uml-graph')
    if(!folder.exists()) {
        println 'uml-graph is not available. Clone uml-graph from GitHub...'
        destinationPath = 'repositories/uml-graph'
        uri = 'https://github.com/dspinellis/UMLGraph.git'
    } else {
        println 'uml-graph is available, do nothing'
    }
}

