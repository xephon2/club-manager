// Apply the java plugin to add support for Java
apply plugin: 'java'

// I do not know for what this plugin is used
apply plugin: 'eclipse-wtp'

// Apply the Github pages plugin
// apply plugin: 'github-pages'

// Apply the Checkstyle plugin
// apply plugin: 'checkstyle'

// Apply the Findbugs plugin to find bugs in pre-commits
// apply plugin: 'findbugs'

sourceCompatibility = 1.7
version = '0.1'

jar {
    manifest {
        attributes 'Implementation-Title': 'Club Manager', 'Implementation-Version': version
    }
}

sourceSets {
    main {
        compileClasspath += fileTree(dir: './lib', includes: ['**/*.jar'])
    }
}

// defaultTasks 'ant.antCompile', 'ant.createJavadoc'


allprojects {
    repositories {
        // Use 'maven central' for resolving your dependencies.
        mavenCentral()
    }

    dependencies {
        // Use JUnit for testing,
        testCompile group: 'junit', name: 'junit', version: '4.+'
        // testCompile 'junit:junit:4.11'
		
		// Use the Google Guava libraries
		compile group: 'com.google.guava', name: 'guava', version: '15.0'
    }
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.ajoberstar:gradle-git:0.6.3'
    }
}

// Generate the javadoc
task createJavadocs(type: Javadoc) {
    source = sourceSets.main.allJava
}

// Copy javadoc from to the doc directory
task copyJavaDocumentation(type: Copy) {
    from 'build/docs/javadoc'
    into 'doc/javadoc'
}

// Create Java JAR and copy it to the ~/jar directory
task createClubManagerJar(type: Copy, dependsOn: jar) {
    from 'build/libs'
    into 'jar'
}

// Superior task to assemble all docs at once
task createDocumentation(dependsOn: ['createJavadocs', 'copyJavaDocumentation']) {
    copyJavaDocumentation.mustRunAfter createJavadocs
}


// Import ANT tasks
ant.importBuild 'build.xml'


// Import gradle-git
import org.ajoberstar.gradle.git.tasks.*


// Clone the DITA-OT
task cloneDitaOt (type: GitClone) {
    def destination = file("repositories/dita-ot")
    uri = "https://github.com/dita-ot/dita-ot.git"
    destinationPath = destination
    bare = false
    enabled = !destination.exists() //to clone only once
}

/**
 * Enable this task to use FindBugs and CheckStyle in the "check" task.
 * Because the project usually contains some minor style issues, this
 * task should be disabled by default.
 */
// task quality (dependsOn: ['findbugsMain', 'checkstyleMain']) {
//    ignoreFailures = true
// }
